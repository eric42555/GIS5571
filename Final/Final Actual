rospectus 
https://docs.google.com/document/d/1Rd5MsRLu2-fE3mc5JCaGkJAeOkBLIsLg/edit?usp=sharing&ouid=100089053748434382929&rtpof=true&sd=true

First Draft
https://docs.google.com/document/d/1LgfvJMQAe4GF9zsjZvUEEwH2jmyPskmI/edit#

#Peer Review 
https://docs.google.com/document/d/181HcOkx7iNIonBAXLvMU-qABj9u0dXaEdh12hjMz7Ig/edit?usp=sharing

#Data Pipeline

import arcpy
import requests 
import io
import os 
import zipfile
arcpy.env.workspace = r'G:\My Drive\GIS 5571\Final\FinalP\FinalP.gdb'
working_dir = r'G:\My Drive\GIS 5571\Final\FinalP\FinalP.gdb'

#Land Use 

landuse_file = r'https://resources.gisdata.mn.gov/pub/gdrs/data/pub/us_mn_state_dnr/biota_landcover_census_of_90s/tif_biota_landcover_census_of_90s.zip'
landuse_actual.content = requests.post(landuse_file)
landusezipfile = zipfile.ZipFile(io.BytesIO(landuse_post_request.content))
landusezipfile.extractall(working_dir)

#Zone Numbers 

zone_file = r'https://resources.gisdata.mn.gov/pub/gdrs/data/pub/us_mn_state_dnr/bdry_deer_permit_areas/shp_bdry_deer_permit_areas.zip'
zone_actual.content = requests.post(data_file)
zonezipfile = zipfile.ZipFile(io.BytesIO(data_post_request.content))
zonezipfile.extractall(working_dir)

#CWD Data 

base_CWD_url =  "https://www.dnr.state.mn.us/cwd/table.csv"

master_param= {
         "state" : "MN"
         "season" : "deer"
         "year" : "2022" }
         
req_response = requests.get(base_CWD_url, params = master_params)

with open("NameForNewCSVFile.csv" , "w") as newCSV_txt:
         newCSV_txt.write(req_response.content.decode('utf-8'))"
         
#Transform Code (used for CWD only)
arcpy.management.ConvertCoordinateNotation("CWD", r"G:\My Drive\GIS 5571\Final\FinalP\FinalP.gdb\CWD_ConvertCoordinateNota", "UNIQUE_ID", "BKWYNAME", "DD_2", "DD_2", None, 'GEOGCS["NAD_1983_UTM_Zone_15N",DATUM["NAD_1983_UTM_Zone_15N",SPHEROID["GRS_1980",6378137.0,298.257223563]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]];-400 -400 1000000000;-100000 10000;-100000 10000;8.98315284119521E-09;0.001;0.001;IsHighPrecision', 'PROJCS["NAD_1983_UTM_Zone_15N",GEOGCS["GCS_North_American_1983",DATUM["D_North_American_1983",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",500000.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",-93.0],PARAMETER["Scale_Factor",0.9996],PARAMETER["Latitude_Of_Origin",0.0],UNIT["Meter",1.0]]', "INCLUDE_INVALID")

#Harvest Data 

harvest_file = r'https://resources.gisdata.mn.gov/pub/gdrs/data/pub/us_mn_state_dnr/env_mn_deer_harvest/shp_env_mn_deer_harvest.zip'
harvest_actual.content = requests.post(data_file)
harvestzipfile = zipfile.ZipFile(io.BytesIO(data_post_request.content))
harvestzipfile.extractall(working_dir)

#DEM 

DEM_file = r'https://resources.gisdata.mn.gov/pub/gdrs/data/pub/us_mn_state_dnr/elev_30m_digital_elevation_model/fgdb_elev_30m_digital_elevation_model.zip'
DEM_actual = requests.post(DEM_file)
DEMzipfile = zipfile.ZipFile(io.BytesIO(DEM_post_request.content))
DEMzipfile.extractall(working_dir)


#Raster Calculator for landcover 

#Raster Calculator for CWD

#Raster Calculator for Hunter Success  

#Raster Calculator to Create Cost Surface 

#Accuracy Assessment
arcpy.gp.ComputeConfusionMatrix("aapnt2.shp", "confm.dbf")

#Export Layout as PDF
aprx= arcpy.mpArcGISProject(r"G:\My Drive\GIS 5571\Final\FinalP.aprx")
lyt = aprx.listLayouts("Index_Map*")[0]
#lyt.exportToPDF(r"G:\My Drive\GIS 5571\Final\FinalP\Output\Index_Map.pdf" , resolution = 300)

#Export to Webmap 
arcpy.server.ExportWebMap(FinalP_as_JSON, "G:\My Drive\GIS 5571\Final\FinalP_webmap.json")
